{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY Jexactyl PANEL - jexactyl.com",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2024-11-06T12:32:29+00:00",
    "name": "Retroactyl Proxy",
    "author": "mail@retronodes.cloud",
    "description": "Minecraft server software selector for Proxy servers, compatible with both ARM64 and Intel or AMD-based hardware. Select from Bungeecord, Waterfall, Velocity, Waterfall-Geyser-Floodgate, Velocity-Geyser-Floodgate and WaterdogPE.",
    "features": [
        "eula",
        "java_version",
        "pid_limit"
    ],
    "docker_images": {
        "Java 21": "ghcr.io\/pterodactyl\/yolks:java_21",
        "Java 17": "ghcr.io\/pterodactyl\/yolks:java_17",
        "Java 16": "ghcr.io\/pterodactyl\/yolks:java_16",
        "Java 11": "ghcr.io\/pterodactyl\/yolks:java_11",
        "Java 8": "ghcr.io\/pterodactyl\/yolks:java_8"
    },
    "file_denylist": [],
    "startup": ".\/startup.sh",
    "config": {
        "files": "{\r\n    \"server.properties\": {\r\n        \"parser\": \"properties\",\r\n        \"find\": {\r\n            \"server-ip\": \"0.0.0.0\",\r\n            \"server-port\": \"{{server.build.default.port}}\",\r\n            \"query.port\": \"{{server.build.default.port}}\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \")! For help, type \"\r\n}",
        "logs": "{}",
        "stop": "stop"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n\r\n# Ensure SERVER_SOFTWARE is defined (if it\u2019s empty, set it to Bungeecord by default)\r\nSERVER_SOFTWARE=\"${SERVER_SOFTWARE:-Bungeecord}\"\r\n\r\n# Helper function for Java installation\r\ninstall_java_21() {\r\n    if ! java -version 2>&1 | grep \"21\" &> \/dev\/null; then\r\n        echo \"Java 21 is not installed. Installing Java 21...\"\r\n        if command -v apk &> \/dev\/null; then\r\n            apk update\r\n            apk add --no-cache openjdk21\r\n        elif command -v apt-get &> \/dev\/null; then\r\n            apt-get update\r\n            apt-get install -y openjdk-21-jdk\r\n        elif command -v yum &> \/dev\/null; then\r\n            yum install -y java-21-openjdk\r\n        else\r\n            echo \"Java installation failed. Please install Java 21 manually.\"\r\n            exit 1\r\n        fi\r\n    else\r\n        echo \"Java 21 is already installed.\"\r\n    fi\r\n}\r\n\r\n# Main installation section\r\nmkdir -p \/mnt\/server\r\ncd \/mnt\/server || { echo \"Failed to navigate to \/mnt\/server\"; exit 1; }\r\n\r\ncase \"$SERVER_SOFTWARE\" in\r\n    \"Bungeecord\")\r\n        echo \"Starting Bungeecord installation...\"\r\n        install_java_21\r\n\tcd \/mnt\/server\r\n\r\n\tif [ -z \"${BUNGEE_VERSION}\" ] || [ \"${BUNGEE_VERSION}\" == \"latest\" ]; then\r\n    \tBUNGEE_VERSION=\"lastStableBuild\"\r\n\tfi\r\n\r\n\tcurl -o ${SERVER_JARFILE} https:\/\/ci.md-5.net\/job\/BungeeCord\/${BUNGEE_VERSION}\/artifact\/bootstrap\/target\/BungeeCord.jar\r\n        \r\n        # Bungeecord startup command with unix_args.txt check\r\n        echo 'java -Xms128M -XX:MaxRAMPercentage=95.0 -jar server.jar' > startup.sh\r\n        ;;\r\n\r\n    \"Waterfall\")\r\n        echo \"Starting Waterfall installation...\"\r\n        install_java_21\r\n\tPROJECT=waterfall\r\n\r\n\t# Install dependencies using apk\r\n\tapk update\r\n\tapk add --no-cache curl jq\r\n\r\n\t# Check if a custom download link is provided\r\n\tif [ -n \"${DL_LINK}\" ]; then\r\n    \techo -e \"Using supplied download url: ${DL_LINK}\"\r\n    \tDOWNLOAD_URL=`eval echo $(echo ${DL_LINK} | sed -e 's\/{{\/${\/g' -e 's\/}}\/}\/g')`\r\n\telse\r\n    \t# Check if the specified Minecraft version exists\r\n    \tVER_EXISTS=`curl -s https:\/\/papermc.io\/api\/v2\/projects\/${PROJECT} | jq -r --arg VERSION $MINECRAFT_VERSION '.versions[] | contains($VERSION)' | grep true`\r\n    \tLATEST_VERSION=`curl -s https:\/\/papermc.io\/api\/v2\/projects\/${PROJECT} | jq -r '.versions' | jq -r '.[-1]'`\r\n\r\n    \tif [ \"${VER_EXISTS}\" == \"true\" ]; then\r\n        echo -e \"Version is valid. Using version ${MINECRAFT_VERSION}\"\r\n    \telse\r\n        echo -e \"Using the latest ${PROJECT} version\"\r\n        MINECRAFT_VERSION=${LATEST_VERSION}\r\n    \tfi\r\n\r\n    \t# Check if the specified build exists\r\n    \tBUILD_EXISTS=`curl -s https:\/\/papermc.io\/api\/v2\/projects\/${PROJECT}\/versions\/${MINECRAFT_VERSION} | jq -r --arg BUILD ${BUILD_NUMBER} '.builds[] | tostring | contains($BUILD)' | grep true`\r\n    \tLATEST_BUILD=`curl -s https:\/\/papermc.io\/api\/v2\/projects\/${PROJECT}\/versions\/${MINECRAFT_VERSION} | jq -r '.builds' | jq -r '.[-1]'`\r\n\r\n    \tif [ \"${BUILD_EXISTS}\" == \"true\" ]; then\r\n        echo -e \"Build is valid for version ${MINECRAFT_VERSION}. Using build ${BUILD_NUMBER}\"\r\n    \telse\r\n        echo -e \"Using the latest ${PROJECT} build for version ${MINECRAFT_VERSION}\"\r\n        BUILD_NUMBER=${LATEST_BUILD}\r\n    \tfi\r\n\r\n    \t# Set the download URL for the selected version and build\r\n    \tJAR_NAME=${PROJECT}-${MINECRAFT_VERSION}-${BUILD_NUMBER}.jar\r\n    \techo \"Version being downloaded\"\r\n    \techo -e \"MC Version: ${MINECRAFT_VERSION}\"\r\n    \techo -e \"Build: ${BUILD_NUMBER}\"\r\n    \techo -e \"JAR Name of Build: ${JAR_NAME}\"\r\n    \tDOWNLOAD_URL=https:\/\/papermc.io\/api\/v2\/projects\/${PROJECT}\/versions\/${MINECRAFT_VERSION}\/builds\/${BUILD_NUMBER}\/downloads\/${JAR_NAME}\r\n\tfi\r\n\r\n\t# Navigate to the server directory\r\n\tcd \/mnt\/server\r\n\r\n\t# Download the server jar file\r\n\techo -e \"Running curl -o ${SERVER_JARFILE} ${DOWNLOAD_URL}\"\r\n\r\n\tif [ -f ${SERVER_JARFILE} ]; then\r\n    \tmv ${SERVER_JARFILE} ${SERVER_JARFILE}.old\r\n\tfi\r\n\r\n\tcurl -o ${SERVER_JARFILE} ${DOWNLOAD_URL}\r\n\r\n\t# Download config.yml if not already present\r\n\tif [ ! -f config.yml ]; then\r\n    \techo -e \"Downloading ${PROJECT} config.yml\"\r\n    \tcurl -o config.yml https:\/\/raw.githubusercontent.com\/parkervcp\/eggs\/master\/game_eggs\/minecraft\/proxy\/java\/waterfall\/config.yml\r\n\telse\r\n    \techo -e \"${PROJECT} config.yml exists. Will not pull a new file\"\r\n\tfi\r\n    \r\n        # Waterfall startup command with unix_args.txt check\r\n        echo 'java -Xms128M -XX:MaxRAMPercentage=95.0 -Dterminal.jline=false -Dterminal.ansi=true -jar server.jar' > startup.sh\r\n        ;;\r\n\r\n    \"Velocity\")\r\n        echo \"Starting Velocity installation...\"\r\n        install_java_21\r\n\tPROJECT=velocity\r\n\r\n\tif [[ -z ${VELOCITY_VERSION} ]] || [[ ${VELOCITY_VERSION} == \"Latest\" ]]; then\r\n    \tVELOCITY_VERSION=\"latest\"\r\n\tfi\r\n\r\n\tif [[ -n \"${DOWNLOAD_LINK}\" ]]; then\r\n    \techo -e \"Using supplied download url: ${DOWNLOAD_LINK}\"\r\n    \tDOWNLOAD_URL=$(eval echo $(echo ${DL_PATH} | sed -e 's\/{{\/${\/g' -e 's\/}}\/}\/g'))\r\n\telse\r\n    \tVER_EXISTS=$(curl -s https:\/\/papermc.io\/api\/v2\/projects\/${PROJECT} | jq -r --arg VERSION $VELOCITY_VERSION '.versions[] | contains($VERSION)' | grep true)\r\n    \tLATEST_VERSION=$(curl -s https:\/\/papermc.io\/api\/v2\/projects\/${PROJECT} | jq -r '.versions' | jq -r '.[-1]')\r\n\r\n\tif [[ \"${VER_EXISTS}\" == \"true\" ]]; then\r\n    \techo -e \"Version is valid. Using version ${VELOCITY_VERSION}\"\r\n\telse\r\n    \techo -e \"Using the latest ${PROJECT} version\"\r\n    \tVELOCITY_VERSION=${LATEST_VERSION}\r\n\tfi\r\n\r\n\tBUILD_EXISTS=$(curl -s https:\/\/papermc.io\/api\/v2\/projects\/${PROJECT}\/versions\/${VELOCITY_VERSION} | jq -r --arg BUILD ${BUILD_NUMBER} '.builds[] | tostring | contains($BUILD)' | grep true)\r\n\tLATEST_BUILD=$(curl -s https:\/\/papermc.io\/api\/v2\/projects\/${PROJECT}\/versions\/${VELOCITY_VERSION} | jq -r '.builds' | jq -r '.[-1]')\r\n\r\n\tif [[ \"${BUILD_EXISTS}\" == \"true\" ]]; then\r\n    \techo -e \"Build is valid for version ${VELOCITY_VERSION}. Using build ${BUILD_NUMBER}\"\r\n\telse\r\n    \techo -e \"Using the latest ${PROJECT} build for version ${VELOCITY_VERSION}\"\r\n    \tBUILD_NUMBER=${LATEST_BUILD}\r\n\tfi\r\n\r\n\tJAR_NAME=${PROJECT}-${VELOCITY_VERSION}-${BUILD_NUMBER}.jar\r\n\techo \"Version being downloaded\"\r\n\techo -e \"Velocity Version: ${VELOCITY_VERSION}\"\r\n\techo -e \"Build: ${BUILD_NUMBER}\"\r\n\techo -e \"JAR Name of Build: ${JAR_NAME}\"\r\n\tDOWNLOAD_URL=https:\/\/papermc.io\/api\/v2\/projects\/${PROJECT}\/versions\/${VELOCITY_VERSION}\/builds\/${BUILD_NUMBER}\/downloads\/${JAR_NAME}\r\n\r\n\tfi\r\n\tcd \/mnt\/server\r\n\techo -e \"Running curl -o ${SERVER_JARFILE} ${DOWNLOAD_URL}\"\r\n\r\n\tif [[ -f ${SERVER_JARFILE} ]]; then\r\n\tmv ${SERVER_JARFILE} ${SERVER_JARFILE}.old\r\n\tfi\r\n\r\n\tcurl -o ${SERVER_JARFILE} ${DOWNLOAD_URL}\r\n\r\n\tif [[ -f velocity.toml ]]; then\r\n    \techo -e \"velocity config file exists\"\r\n\telse\r\n    \techo -e \"downloading velocity config file.\"\r\n    \tcurl https:\/\/raw.githubusercontent.com\/parkervcp\/eggs\/master\/game_eggs\/minecraft\/proxy\/java\/velocity\/velocity.toml -o velocity.toml\r\n\tfi\r\n\r\n\tif [[ -f forwarding.secret ]]; then\r\n    \techo -e \"velocity forwarding secret file already exists\"\r\n\telse\r\n    \techo -e \"creating forwarding secret file\"\r\n    \ttouch forwarding.secret\r\n    \tdate +%s | sha256sum | base64 | head -c 12 > forwarding.secret\r\n\tfi\r\n\r\n\techo -e \"install complete\"\r\n    \r\n        # Velocity startup command with unix_args.txt check\r\n        echo 'java -Xms128M -XX:MaxRAMPercentage=95.0 -XX:+UseG1GC -XX:G1HeapRegionSize=4M -XX:+UnlockExperimentalVMOptions -XX:+ParallelRefProcEnabled -XX:+AlwaysPreTouch -XX:MaxInlineLevel=15 -jar server.jar' > startup.sh\r\n        ;;\r\n\r\n    \"Waterfall-Geyser-Floodgate\")\r\n        echo \"Starting Waterfall-Geyser-Floodgate installation...\"\r\n        install_java_21\r\n\tPROJECT=waterfall\r\n\tif [ -n \"${DL_PATH}\" ]; then\r\n\techo -e \"Using supplied download url: ${DL_PATH}\"\r\n\tDOWNLOAD_URL=`eval echo $(echo ${DL_PATH} | sed -e 's\/{{\/${\/g' -e 's\/}}\/}\/g')`\r\n\telse\r\n\tVER_EXISTS=`curl -s https:\/\/api.papermc.io\/v2\/projects\/${PROJECT} | jq -r --arg VERSION $MINECRAFT_VERSION '.versions[] | contains($VERSION)' | grep -m1 true`\r\n\tLATEST_VERSION=`curl -s https:\/\/api.papermc.io\/v2\/projects\/${PROJECT} | jq -r '.versions' | jq -r '.[-1]'`\r\n\tif [ \"${VER_EXISTS}\" == \"true\" ]; then\r\n\techo -e \"Version is valid. Using version ${MINECRAFT_VERSION}\"\r\n\telse\r\n\techo -e \"Using the latest ${PROJECT} version\"\r\n\tMINECRAFT_VERSION=${LATEST_VERSION}\r\n\tfi\r\n\tBUILD_EXISTS=`curl -s https:\/\/api.papermc.io\/v2\/projects\/${PROJECT}\/versions\/${MINECRAFT_VERSION} | jq -r --arg BUILD ${BUILD_NUMBER} '.builds[] | tostring | contains($BUILD)' | grep -m1 true`\r\n\tLATEST_BUILD=`curl -s https:\/\/api.papermc.io\/v2\/projects\/${PROJECT}\/versions\/${MINECRAFT_VERSION} | jq -r '.builds' | jq -r '.[-1]'`\r\n\tif [ \"${BUILD_EXISTS}\" == \"true\" ]; then\r\n\techo -e \"Build is valid for version ${MINECRAFT_VERSION}. Using build ${BUILD_NUMBER}\"\r\n\telse\r\n\techo -e \"Using the latest ${PROJECT} build for version ${MINECRAFT_VERSION}\"\r\n\tBUILD_NUMBER=${LATEST_BUILD}\r\n\tfi\r\n\tJAR_NAME=${PROJECT}-${MINECRAFT_VERSION}-${BUILD_NUMBER}.jar\r\n\techo \"Version being downloaded\"\r\n\techo -e \"MC Version: ${MINECRAFT_VERSION}\"\r\n\techo -e \"Build: ${BUILD_NUMBER}\"\r\n\techo -e \"JAR Name of Build: ${JAR_NAME}\"\r\n\tDOWNLOAD_URL=https:\/\/api.papermc.io\/v2\/projects\/${PROJECT}\/versions\/${MINECRAFT_VERSION}\/builds\/${BUILD_NUMBER}\/downloads\/${JAR_NAME}\r\n\tfi\r\n\tcd \/mnt\/server\r\n\techo -e \"Running curl -o ${SERVER_JARFILE} ${DOWNLOAD_URL}\"\r\n\tif [ -f ${SERVER_JARFILE} ]; then\r\n\tmv ${SERVER_JARFILE} ${SERVER_JARFILE}.old\r\n\tfi\r\n\tcurl -o ${SERVER_JARFILE} ${DOWNLOAD_URL}\r\n\tif [ ! -f config.yml ]; then\r\n\techo -e \"Downloading config.yml\"\r\n\tcurl -o config.yml https:\/\/raw.githubusercontent.com\/parkervcp\/eggs\/master\/minecraft\/proxy\/java\/waterfall\/config.yml\r\n\tfi\r\n\tmkdir plugins\r\n\techo -e \"Downloading Geyser\"\r\n\tGEYSER_HASH=`curl -L https:\/\/download.geysermc.org\/v2\/projects\/geyser\/versions\/latest\/builds\/latest | jq -r .downloads.bungeecord.sha256`\r\n\tcurl -o plugins\/geyser-bungeecord.jar -L https:\/\/download.geysermc.org\/v2\/projects\/geyser\/versions\/latest\/builds\/latest\/downloads\/bungeecord\r\n\techo \"${GEYSER_HASH} plugins\/geyser-bungeecord.jar\" | sha256sum -c\r\n\tRESULT=$?\r\n\tif [[ $RESULT -eq 0 ]]; then\r\n\techo \"Geyser SHA256 match\"\r\n\telse\r\n\techo \"SHA256 does not match! Aborting...\"\r\n\trm plugins\/geyser-bungeecord.jar\r\n\texit 1\r\n\tfi\r\n\techo -e \"Downloading Floodgate\"\r\n\tFLOODGATE_HASH=`curl -L https:\/\/download.geysermc.org\/v2\/projects\/floodgate\/versions\/latest\/builds\/latest | jq -r .downloads.bungee.sha256`\r\n\tcurl -o plugins\/floodgate-bungee.jar -L https:\/\/download.geysermc.org\/v2\/projects\/floodgate\/versions\/latest\/builds\/latest\/downloads\/bungee\r\n\techo \"${FLOODGATE_HASH} plugins\/floodgate-bungee.jar\" | sha256sum -c\r\n\tRESULT=$?\r\n\tif [[ $RESULT -eq 0 ]]; then\r\n\techo \"Floodgate SHA256 match\"\r\n\telse\r\n\techo \"SHA256 does not match! Aborting...\"\r\n\trm plugins\/floodgate-bungee.jar\r\n\texit 1\r\n\tfi\r\n\tmkdir -p plugins\/Geyser-BungeeCord\/\r\n\tif [[ ! -f \"plugins\/Geyser-BungeeCord\/config.yml\" ]]; then\r\n\techo -e \"Downloading default Geyser config\"\r\n\tcurl -o plugins\/Geyser-BungeeCord\/config.yml https:\/\/raw.githubusercontent.com\/GeyserMC\/Geyser\/master\/core\/src\/main\/resources\/config.yml\r\n\tsed -i 's\/: online\/: floodgate\/g' plugins\/Geyser-BungeeCord\/config.yml\r\n\tfi\r\n    \r\n        # Waterfall-Geyser-Floodgate startup command with unix_args.txt check\r\n        echo 'java -Xms128M -XX:MaxRAMPercentage=95.0 -DgeyserUdpPort={{GEYSER_PORT}} -jar server.jar' > startup.sh\r\n        ;;\r\n\r\n    \"Velocity-Geyser-Floodgate\")\r\n        echo \"Starting Velocity-Geyser-Floodgate installation...\"\r\n        install_java_21\r\n\tPROJECT=velocity\r\n\tif [ -n \"${DL_PATH}\" ]; then\r\n\techo -e \"Using supplied download url: ${DL_PATH}\"\r\n\tDOWNLOAD_URL=`eval echo $(echo ${DL_PATH} | sed -e 's\/{{\/${\/g' -e 's\/}}\/}\/g')`\r\n\telse\r\n\tVER_EXISTS=`curl -s https:\/\/api.papermc.io\/v2\/projects\/${PROJECT} | jq -r --arg VERSION $VELOCITY_VERSION '.versions[] | contains($VERSION)' | grep -m1 true`\r\n\tLATEST_VERSION=`curl -s https:\/\/api.papermc.io\/v2\/projects\/${PROJECT} | jq -r '.versions' | jq -r '.[-1]'`\r\n\tif [ \"${VER_EXISTS}\" == \"true\" ]; then\r\n\techo -e \"Version is valid. Using version ${VELOCITY_VERSION}\"\r\n\telse\r\n\techo -e \"Using the latest ${PROJECT} version\"\r\n\tVELOCITY_VERSION=${LATEST_VERSION}\r\n\tfi\r\n\tBUILD_EXISTS=`curl -s https:\/\/api.papermc.io\/v2\/projects\/${PROJECT}\/versions\/${VELOCITY_VERSION} | jq -r --arg BUILD ${BUILD_NUMBER} '.builds[] | tostring | contains($BUILD)' | grep -m1 true`\r\n\tLATEST_BUILD=`curl -s https:\/\/api.papermc.io\/v2\/projects\/${PROJECT}\/versions\/${VELOCITY_VERSION} | jq -r '.builds' | jq -r '.[-1]'`\r\n\tif [ \"${BUILD_EXISTS}\" == \"true\" ]; then\r\n\techo -e \"Build is valid for version ${VELOCITY_VERSION}. Using build ${BUILD_NUMBER}\"\r\n\telse\r\n\techo -e \"Using the latest ${PROJECT} build for version ${VELOCITY_VERSION}\"\r\n\tBUILD_NUMBER=${LATEST_BUILD}\r\n\tfi\r\n\tJAR_NAME=${PROJECT}-${VELOCITY_VERSION}-${BUILD_NUMBER}.jar\r\n\techo \"Version being downloaded\"\r\n\techo -e \"MC Version: ${VELOCITY_VERSION}\"\r\n\techo -e \"Build: ${BUILD_NUMBER}\"\r\n\techo -e \"JAR Name of Build: ${JAR_NAME}\"\r\n\tDOWNLOAD_URL=https:\/\/api.papermc.io\/v2\/projects\/${PROJECT}\/versions\/${VELOCITY_VERSION}\/builds\/${BUILD_NUMBER}\/downloads\/${JAR_NAME}\r\n\tfi\r\n\tcd \/mnt\/server\r\n\techo -e \"Running curl -o ${SERVER_JARFILE} ${DOWNLOAD_URL}\"\r\n\tif [ -f ${SERVER_JARFILE} ]; then\r\n\tmv ${SERVER_JARFILE} ${SERVER_JARFILE}.old\r\n\tfi\r\n\tcurl -o ${SERVER_JARFILE} ${DOWNLOAD_URL}\r\n\tmkdir plugins\r\n\techo -e \"Downloading Geyser\"\r\n\tGEYSER_HASH=`curl -L https:\/\/download.geysermc.org\/v2\/projects\/geyser\/versions\/latest\/builds\/latest | jq -r .downloads.velocity.sha256`\r\n\tcurl -o plugins\/geyser-velocity.jar -L https:\/\/download.geysermc.org\/v2\/projects\/geyser\/versions\/latest\/builds\/latest\/downloads\/velocity\r\n\techo \"${GEYSER_HASH} plugins\/geyser-velocity.jar\" | sha256sum -c\r\n\tRESULT=$?\r\n\tif [[ $RESULT -eq 0 ]]; then\r\n\techo \"Geyser SHA256 match\"\r\n\telse\r\n\techo \"SHA256 does not match! Aborting...\"\r\n\trm plugins\/geyser-velocity.jar\r\n\texit 1\r\n\tfi\r\n\techo -e \"Downloading Floodgate\"\r\n\tFLOODGATE_HASH=`curl -L https:\/\/download.geysermc.org\/v2\/projects\/floodgate\/versions\/latest\/builds\/latest | jq -r .downloads.velocity.sha256`\r\n\tcurl -o plugins\/floodgate-velocity.jar -L https:\/\/download.geysermc.org\/v2\/projects\/floodgate\/versions\/latest\/builds\/latest\/downloads\/velocity\r\n\techo \"${FLOODGATE_HASH} plugins\/floodgate-velocity.jar\" | sha256sum -c\r\n\tRESULT=$?\r\n\tif [[ $RESULT -eq 0 ]]; then\r\n\techo \"Floodgate SHA256 match\"\r\n\telse\r\n\techo \"SHA256 does not match! Aborting...\"\r\n\trm plugins\/floodgate-velocity.jar\r\n\texit 1\r\n\tfi\r\n\tmkdir -p plugins\/Geyser-Velocity\/\r\n\tif [[ ! -f \"plugins\/Geyser-Velocity\/config.yml\" ]]; then\r\n\techo -e \"Downloading default Geyser config\"\r\n\tcurl -o plugins\/Geyser-Velocity\/config.yml https:\/\/raw.githubusercontent.com\/GeyserMC\/Geyser\/master\/core\/src\/main\/resources\/config.yml\r\n\tsed -i 's\/: online\/: floodgate\/g' plugins\/Geyser-Velocity\/config.yml\r\n\tfi\r\n    \r\n        # Velocity-Geyser-Floodgate startup command with unix_args.txt check\r\n        echo 'java -Xms128M -XX:MaxRAMPercentage=95.0 -XX:+UseG1GC -XX:G1HeapRegionSize=4M -XX:+UnlockExperimentalVMOptions -XX:+ParallelRefProcEnabled -XX:+AlwaysPreTouch -XX:MaxInlineLevel=15 -DgeyserUdpPort={{GEYSER_PORT}} -jar server.jar' > startup.sh\r\n        ;;\r\n\r\n    \"WaterdogPE\")\r\n    \techo \"Starting WaterdogPE installation...\"\r\n    \tinstall_java_21\r\n    \r\n    \t# Ensure \/mnt\/server directory exists\r\n    \tif [ ! -d \/mnt\/server ]; then\r\n        mkdir \/mnt\/server\r\n    \tfi\r\n\r\n    \tcd \/mnt\/server\r\n\r\n    \t# Adding '.jar' if it isn't part of the file name\r\n    \tif [ \"${SERVER_JARFILE_PE}\" != *.jar ]; then\r\n        echo -e \"Adding .jar to server file name\"\r\n        SERVER_JARFILE=\"${SERVER_JARFILE}.jar\"\r\n    \tfi\r\n\r\n    \t# Download the Waterdog PE build\r\n    \tif [ -z \"${WATERDOG_VERSION}\" ] || [ \"${WATERDOG_VERSION}\" == \"latest\" ]; then\r\n        echo -e \"Downloading latest Waterdog PE build\"\r\n        curl -sSL -o ${SERVER_JARFILE_PE} https:\/\/jenkins.waterdog.dev\/job\/Waterdog\/job\/WaterdogPE\/job\/release\/lastSuccessfulBuild\/artifact\/target\/Waterdog.jar\r\n    \telse \r\n        echo -e \"Downloading Waterdog PE build ${WATERDOG_VERSION}\"\r\n        curl -sSL -o ${SERVER_JARFILE_PE} https:\/\/jenkins.waterdog.dev\/job\/Waterdog\/job\/WaterdogPE\/job\/release\/${WATERDOG_VERSION}\/artifact\/target\/Waterdog.jar\r\n    \tfi\r\n\r\n    \t# Download config.yml if it doesn't exist\r\n    \tif [ ! -f config.yml ]; then\r\n        echo -e \"Downloading Waterdog PE config.yml\"\r\n        curl -o config.yml https:\/\/raw.githubusercontent.com\/parkervcp\/eggs\/master\/game_eggs\/minecraft\/proxy\/bedrock\/waterdog_pe\/config.yml\r\n    \telse\r\n        echo -e \"Waterdog PE config.yml exists. Will not pull a new file\"\r\n    \tfi\r\n\r\n    \t## install end\r\n    \techo \"-----------------------------------------\"\r\n    \techo \"Installation completed...\"\r\n    \techo \"-----------------------------------------\"\r\n    \r\n    \t# WaterdogPE startup command with unix_args.txt check\r\n    \techo 'java -Dterminal.ansi=true -Xms128M -XX:MaxRAMPercentage=95.0 -jar server.jar' > startup.sh\r\n    \t;;\r\n\r\n\r\n    *)\r\n        echo \"Unrecognized server software: $SERVER_SOFTWARE. Defaulting to Bungeecord latest.\"\r\n        echo \"Starting Bungeecord installation...\"\r\n        install_java_21\r\n\tcd \/mnt\/server\r\n\r\n\tif [ -z \"${BUNGEE_VERSION}\" ] || [ \"${BUNGEE_VERSION}\" == \"latest\" ]; then\r\n    \tBUNGEE_VERSION=\"lastStableBuild\"\r\n\tfi\r\n\r\n\tcurl -o ${SERVER_JARFILE} https:\/\/ci.md-5.net\/job\/BungeeCord\/${BUNGEE_VERSION}\/artifact\/bootstrap\/target\/BungeeCord.jar\r\n        \r\n        # Bungeecord startup command with unix_args.txt check\r\n        echo 'java -Xms128M -XX:MaxRAMPercentage=95.0 -jar server.jar' > startup.sh\r\n        ;;\r\nesac\r\n\r\n# Final setup and permissions\r\nchmod +x startup.sh\r\necho \"Setup complete. You may click on the start button.\"",
            "container": "ghcr.io\/pterodactyl\/installers:alpine",
            "entrypoint": "ash"
        }
    },
    "variables": [
        {
            "name": "Minecraft Version",
            "description": "Installs the latest version of Minecraft for your selected server software",
            "env_variable": "MINECRAFT_VERSION",
            "default_value": "Latest",
            "user_viewable": true,
            "user_editable": false,
            "rules": "nullable|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Server Software",
            "description": "Write the server software to install: Bungeecord, Waterfall, Velocity, Waterfall-Geyser-Floodgate, Velocity-Geyser-Floodgate or WaterdogPE",
            "env_variable": "SERVER_SOFTWARE",
            "default_value": "Bungeecord",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:100",
            "field_type": "text"
        },
        {
            "name": "Download Path",
            "description": "A URL to use to download a server.jar rather than the ones in the install script. This is not user viewable.",
            "env_variable": "DL_PATH",
            "default_value": "",
            "user_viewable": false,
            "user_editable": false,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Build Number",
            "description": "",
            "env_variable": "BUILD_NUMBER",
            "default_value": "latest",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Bungeecord Version",
            "description": "The version of Bungeecord to download and use.",
            "env_variable": "BUNGEE_VERSION",
            "default_value": "latest",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|alpha_num|between:1,6",
            "field_type": "text"
        },
        {
            "name": "Server Jar File",
            "description": "",
            "env_variable": "SERVER_JARFILE",
            "default_value": "server.jar",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|regex:\/^([\\w\\d._-]+)(\\.jar)$\/",
            "field_type": "text"
        },
        {
            "name": "Velocity Version",
            "description": "The Velocity Proxy version to download.\r\nSet to 'latest ' the download the last stable build.",
            "env_variable": "VELOCITY_VERSION",
            "default_value": "latest",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Geyser Port",
            "description": "The UDP port that Geyser will listen on\r\n\"-1\" will forcibly stop Geyser\r\n\"server\" will have Geyser listen on the same port as the TCP server",
            "env_variable": "GEYSER_PORT",
            "default_value": "19132",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:6",
            "field_type": "text"
        },
        {
            "name": "Download Link",
            "description": "A link to the server jar to download the waterfall jar.",
            "env_variable": "DL_LINK",
            "default_value": "",
            "user_viewable": false,
            "user_editable": false,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Waterdog PE Version",
            "description": "The build to pull and install. (Ex. 23), or set to latest\r\nThis is the build number on https:\/\/jenkins.waterdog.dev\/",
            "env_variable": "WATERDOG_VERSION",
            "default_value": "latest",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Server Jar File PE",
            "description": "The jar to run to WaterdogPE",
            "env_variable": "SERVER_JARFILE_PE",
            "default_value": "server.jar",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:20",
            "field_type": "text"
        }
    ]
}