{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY Jexactyl PANEL - jexactyl.com",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2024-11-06T12:32:35+00:00",
    "name": "Retroactyl Crossplay",
    "author": "mail@retronodes.cloud",
    "description": "Minecraft server software selector for Geyser-Floodgate, compatible with both ARM64 and Intel or AMD-based hardware. Select from Paper and Purpur versions of Geyser-Floodgate.",
    "features": [
        "eula",
        "java_version",
        "pid_limit"
    ],
    "docker_images": {
        "Java 21": "ghcr.io\/pterodactyl\/yolks:java_21",
        "Java 17": "ghcr.io\/pterodactyl\/yolks:java_17",
        "Java 16": "ghcr.io\/pterodactyl\/yolks:java_16",
        "Java 11": "ghcr.io\/pterodactyl\/yolks:java_11",
        "Java 8": "ghcr.io\/pterodactyl\/yolks:java_8"
    },
    "file_denylist": [],
    "startup": ".\/startup.sh",
    "config": {
        "files": "{\r\n    \"server.properties\": {\r\n        \"parser\": \"properties\",\r\n        \"find\": {\r\n            \"server-ip\": \"0.0.0.0\",\r\n            \"server-port\": \"{{server.build.default.port}}\",\r\n            \"query.port\": \"{{server.build.default.port}}\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \")! For help, type \"\r\n}",
        "logs": "{}",
        "stop": "stop"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n\r\n# Ensure SERVER_SOFTWARE is defined (if it\u2019s empty, set it to Paper by default)\r\nSERVER_SOFTWARE=\"${SERVER_SOFTWARE:-Paper}\"\r\n\r\n# Helper function for Java installation\r\ninstall_java_21() {\r\n    if ! java -version 2>&1 | grep \"21\" &> \/dev\/null; then\r\n        echo \"Java 21 is not installed. Installing Java 21...\"\r\n        if command -v apk &> \/dev\/null; then\r\n            apk update\r\n            apk add --no-cache openjdk21\r\n        elif command -v apt-get &> \/dev\/null; then\r\n            apt-get update\r\n            apt-get install -y openjdk-21-jdk\r\n        elif command -v yum &> \/dev\/null; then\r\n            yum install -y java-21-openjdk\r\n        else\r\n            echo \"Java installation failed. Please install Java 21 manually.\"\r\n            exit 1\r\n        fi\r\n    else\r\n        echo \"Java 21 is already installed.\"\r\n    fi\r\n}\r\n\r\n# Main installation section\r\nmkdir -p \/mnt\/server\r\ncd \/mnt\/server || { echo \"Failed to navigate to \/mnt\/server\"; exit 1; }\r\n\r\ncase \"$SERVER_SOFTWARE\" in\r\n    \"Paper\")\r\n        echo \"Starting Paper-Geyser-Floodgate installation...\"\r\n        install_java_21\r\n\tPROJECT=paper\r\n\tif [ -n \"${DL_PATH}\" ]; then\r\n\techo -e \"Using supplied download url: ${DL_PATH}\"\r\n\tDOWNLOAD_URL=`eval echo $(echo ${DL_PATH} | sed -e 's\/{{\/${\/g' -e 's\/}}\/}\/g')`\r\n\telse\r\n\tVER_EXISTS=`curl -s https:\/\/api.papermc.io\/v2\/projects\/${PROJECT} | jq -r --arg VERSION $MINECRAFT_VERSION '.versions[] | contains($VERSION)' | grep -m1 true`\r\n\tLATEST_VERSION=`curl -s https:\/\/api.papermc.io\/v2\/projects\/${PROJECT} | jq -r '.versions' | jq -r '.[-1]'`\r\n\tif [ \"${VER_EXISTS}\" == \"true\" ]; then\r\n\techo -e \"Version is valid. Using version ${MINECRAFT_VERSION}\"\r\n\telse\r\n\techo -e \"Using the latest ${PROJECT} version\"\r\n\tMINECRAFT_VERSION=${LATEST_VERSION}\r\n\tfi\r\n\tBUILD_EXISTS=`curl -s https:\/\/api.papermc.io\/v2\/projects\/${PROJECT}\/versions\/${MINECRAFT_VERSION} | jq -r --arg BUILD ${BUILD_NUMBER} '.builds[] | tostring | contains($BUILD)' | grep -m1 true`\r\n\tLATEST_BUILD=`curl -s https:\/\/api.papermc.io\/v2\/projects\/${PROJECT}\/versions\/${MINECRAFT_VERSION} | jq -r '.builds' | jq -r '.[-1]'`\r\n\tif [ \"${BUILD_EXISTS}\" == \"true\" ]; then\r\n\techo -e \"Build is valid for version ${MINECRAFT_VERSION}. Using build ${BUILD_NUMBER}\"\r\n\telse\r\n\techo -e \"Using the latest ${PROJECT} build for version ${MINECRAFT_VERSION}\"\r\n\tBUILD_NUMBER=${LATEST_BUILD}\r\n\tfi\r\n\tJAR_NAME=${PROJECT}-${MINECRAFT_VERSION}-${BUILD_NUMBER}.jar\r\n\techo \"Version being downloaded\"\r\n\techo -e \"MC Version: ${MINECRAFT_VERSION}\"\r\n\techo -e \"Build: ${BUILD_NUMBER}\"\r\n\techo -e \"JAR Name of Build: ${JAR_NAME}\"\r\n\tDOWNLOAD_URL=https:\/\/api.papermc.io\/v2\/projects\/${PROJECT}\/versions\/${MINECRAFT_VERSION}\/builds\/${BUILD_NUMBER}\/downloads\/${JAR_NAME}\r\n\tfi\r\n\tcd \/mnt\/server\r\n\techo -e \"Running curl -o ${SERVER_JARFILE} ${DOWNLOAD_URL}\"\r\n\tif [ -f ${SERVER_JARFILE} ]; then\r\n\tmv ${SERVER_JARFILE} ${SERVER_JARFILE}.old\r\n\tfi\r\n\tcurl -o ${SERVER_JARFILE} ${DOWNLOAD_URL}\r\n\tif [ ! -f server.properties ]; then\r\n\techo -e \"Downloading MC server.properties\"\r\n\tcurl -o server.properties https:\/\/raw.githubusercontent.com\/parkervcp\/eggs\/master\/minecraft\/java\/server.properties\r\n\tfi\r\n\tmkdir plugins\r\n\techo -e \"Downloading Geyser\"\r\n\tGEYSER_HASH=`curl -L https:\/\/download.geysermc.org\/v2\/projects\/geyser\/versions\/latest\/builds\/latest | jq -r .downloads.spigot.sha256`\r\n\tcurl -o plugins\/geyser-spigot.jar -L https:\/\/download.geysermc.org\/v2\/projects\/geyser\/versions\/latest\/builds\/latest\/downloads\/spigot\r\n\techo \"${GEYSER_HASH} plugins\/geyser-spigot.jar\" | sha256sum -c\r\n\tRESULT=$?\r\n\tif [[ $RESULT -eq 0 ]]; then\r\n\techo \"Geyser SHA256 match\"\r\n\telse\r\n\techo \"SHA256 does not match! Aborting...\"\r\n\trm plugins\/geyser-spigot.jar\r\n\texit 1\r\n\tfi\r\n\techo -e \"Downloading Floodgate\"\r\n\tFLOODGATE_HASH=`curl -L https:\/\/download.geysermc.org\/v2\/projects\/floodgate\/versions\/latest\/builds\/latest | jq -r .downloads.spigot.sha256`\r\n\tcurl -o plugins\/floodgate-spigot.jar -L https:\/\/download.geysermc.org\/v2\/projects\/floodgate\/versions\/latest\/builds\/latest\/downloads\/spigot\r\n\techo \"${FLOODGATE_HASH} plugins\/floodgate-spigot.jar\" | sha256sum -c\r\n\tRESULT=$?\r\n\tif [[ $RESULT -eq 0 ]]; then\r\n\techo \"Floodgate SHA256 match\"\r\n\telse\r\n\techo \"SHA256 does not match! Aborting...\"\r\n\trm plugins\/floodgate-spigot.jar\r\n\texit 1\r\n\tfi\r\n\tmkdir -p plugins\/Geyser-Spigot\/\r\n\tif [[ ! -f \"plugins\/Geyser-Spigot\/config.yml\" ]]; then\r\n\techo -e \"Downloading default Geyser config\"\r\n\tcurl -o plugins\/Geyser-Spigot\/config.yml https:\/\/raw.githubusercontent.com\/GeyserMC\/Geyser\/master\/core\/src\/main\/resources\/config.yml\r\n\tsed -i 's\/: online\/: floodgate\/g' plugins\/Geyser-Spigot\/config.yml\r\n\tfi\r\n        \r\n        # Set up Paper-Geyser-Floodgate startup command with unix_args.txt check\r\n        echo 'java -Xms128M -XX:MaxRAMPercentage=95.0 -Dterminal.jline=false -Dterminal.ansi=true -DgeyserUdpPort={{GEYSER_PORT}} -jar server.jar' > startup.sh\r\n        ;;\r\n\r\n    \"Purpur\")\r\n        echo \"Starting Purpur-Geyser-Floodgate installation...\"\r\n        install_java_21\r\n\tPROJECT=purpur\r\n\r\n\t# Download paths for Geyser and Floodgate. Do not change!!\r\n\tGEYSER_DOWNLOAD_URL=\"https:\/\/download.geysermc.org\/v2\/projects\/geyser\/versions\/latest\/builds\/latest\/downloads\/spigot\"\r\n\tFLOODGATE_DOWNLOAD_URL=\"https:\/\/download.geysermc.org\/v2\/projects\/floodgate\/versions\/latest\/builds\/latest\/downloads\/spigot\"\r\n\r\n\t# Set SERVER_JARFILE based on project and version\r\n\tSERVER_JARFILE=\"server.jar\"  # Changed to server.jar\r\n\r\n\tif [ -n \"${DL_PATH}\" ]; then\r\n\techo -e \"Using supplied download url: ${DL_PATH}\"\r\n\tDOWNLOAD_URL=`eval echo $(echo ${DL_PATH} | sed -e 's\/{{\/${\/g' -e 's\/}}\/}\/g')`\r\n\telse\r\n\tVER_EXISTS=`curl -s https:\/\/api.purpurmc.org\/v2\/${PROJECT} | jq -r --arg VERSION $MINECRAFT_VERSION '.versions[] | contains($VERSION)' | grep true`\r\n\tLATEST_VERSION=`curl -s https:\/\/api.purpurmc.org\/v2\/${PROJECT} | jq -r '.versions' | jq -r '.[-1]'`\r\n\r\n\tif [ \"${VER_EXISTS}\" == \"true\" ]; then\r\n\t\techo -e \"Version is valid. Using version ${MINECRAFT_VERSION}\"\r\n\telse\r\n\t\techo -e \"Using the latest ${PROJECT} version\"\r\n\t\tMINECRAFT_VERSION=${LATEST_VERSION}\r\n\tfi\r\n\t\r\n\tBUILD_EXISTS=`curl -s https:\/\/api.purpurmc.org\/v2\/${PROJECT}\/${MINECRAFT_VERSION} | jq -r --arg BUILD ${BUILD_NUMBER} '.builds.all | tostring | contains($BUILD)' | grep true`\r\n\tLATEST_BUILD=`curl -s https:\/\/api.purpurmc.org\/v2\/${PROJECT}\/${MINECRAFT_VERSION} | jq -r '.builds.latest'`\r\n\t\r\n\tif [ \"${BUILD_EXISTS}\" == \"true\" ]; then\r\n\t\techo -e \"Build is valid for version ${MINECRAFT_VERSION}. Using build ${BUILD_NUMBER}\"\r\n\telse\r\n\t\techo -e \"Using the latest ${PROJECT} build for version ${MINECRAFT_VERSION}\"\r\n\t\tBUILD_NUMBER=${LATEST_BUILD}\r\n\tfi\r\n\t\r\n\tJAR_NAME=${PROJECT}-${MINECRAFT_VERSION}-${BUILD_NUMBER}.jar\r\n\t\r\n\techo \"Version being downloaded\"\r\n\techo -e \"MC Version: ${MINECRAFT_VERSION}\"\r\n\techo -e \"Build: ${BUILD_NUMBER}\"\r\n\techo -e \"JAR Name of Build: ${JAR_NAME}\"\r\n\tDOWNLOAD_URL=https:\/\/api.purpurmc.org\/v2\/${PROJECT}\/${MINECRAFT_VERSION}\/${BUILD_NUMBER}\/download\r\n\tfi\r\n\r\n\tcd \/mnt\/server || exit  # Ensure we change directory successfully\r\n\r\n\techo -e \"Downloading the requested purpur build with curl -o ${SERVER_JARFILE} ${DOWNLOAD_URL}\"\r\n\r\n\tif [ -f ${SERVER_JARFILE} ]; then\r\n\tmv ${SERVER_JARFILE} ${SERVER_JARFILE}.old\r\n\tfi\r\n\r\n\tmkdir -p \/mnt\/server\/plugins\r\n\tcurl -sSL -o ${SERVER_JARFILE} ${DOWNLOAD_URL}  # Download and rename to server.jar\r\n\r\n\techo -e \"Downloading last successful build with curl -o plugins\/geyser-spigot.jar ${GEYSER_DOWNLOAD_URL}\"\r\n\tcurl -sSL -o plugins\/geyser-spigot.jar ${GEYSER_DOWNLOAD_URL}  # Download Geyser\r\n\r\n\techo -e \"Downloading last successful build with curl -o plugins\/floodgate-spigot.jar ${FLOODGATE_DOWNLOAD_URL}\"\r\n\tcurl -sSL -o plugins\/floodgate-spigot.jar ${FLOODGATE_DOWNLOAD_URL}  # Download Floodgate\r\n\r\n\tif [ ! -f server.properties ]; then\r\n\techo -e \"Downloading MC server.properties\"\r\n\tcurl -o server.properties https:\/\/raw.githubusercontent.com\/parkervcp\/eggs\/master\/minecraft\/java\/server.properties\r\n\tfi\r\n\techo -e \"Installation Finished\"\r\n    \r\n        # Set up Purpur-Geyser-Floodgate startup command with unix_args.txt check\r\n        echo 'java -Xms128M -XX:MaxRAMPercentage=95.0 -Dterminal.jline=false -Dterminal.ansi=true --add-modules=jdk.incubator.vector -jar server.jar' > startup.sh\r\n        ;;\r\n\r\n    *)\r\n        echo \"Unrecognized server software: $SERVER_SOFTWARE. Defaulting to Paper-Geyser-Floodgate latest.\"\r\n        SERVER_SOFTWARE=\"paper\"\r\n        echo \"Starting Paper installation...\"\r\n        install_java_21\r\n\tPROJECT=paper\r\n\tif [ -n \"${DL_PATH}\" ]; then\r\n\techo -e \"Using supplied download url: ${DL_PATH}\"\r\n\tDOWNLOAD_URL=`eval echo $(echo ${DL_PATH} | sed -e 's\/{{\/${\/g' -e 's\/}}\/}\/g')`\r\n\telse\r\n\tVER_EXISTS=`curl -s https:\/\/api.papermc.io\/v2\/projects\/${PROJECT} | jq -r --arg VERSION $MINECRAFT_VERSION '.versions[] | contains($VERSION)' | grep -m1 true`\r\n\tLATEST_VERSION=`curl -s https:\/\/api.papermc.io\/v2\/projects\/${PROJECT} | jq -r '.versions' | jq -r '.[-1]'`\r\n\tif [ \"${VER_EXISTS}\" == \"true\" ]; then\r\n\techo -e \"Version is valid. Using version ${MINECRAFT_VERSION}\"\r\n\telse\r\n\techo -e \"Using the latest ${PROJECT} version\"\r\n\tMINECRAFT_VERSION=${LATEST_VERSION}\r\n\tfi\r\n\tBUILD_EXISTS=`curl -s https:\/\/api.papermc.io\/v2\/projects\/${PROJECT}\/versions\/${MINECRAFT_VERSION} | jq -r --arg BUILD ${BUILD_NUMBER} '.builds[] | tostring | contains($BUILD)' | grep -m1 true`\r\n\tLATEST_BUILD=`curl -s https:\/\/api.papermc.io\/v2\/projects\/${PROJECT}\/versions\/${MINECRAFT_VERSION} | jq -r '.builds' | jq -r '.[-1]'`\r\n\tif [ \"${BUILD_EXISTS}\" == \"true\" ]; then\r\n\techo -e \"Build is valid for version ${MINECRAFT_VERSION}. Using build ${BUILD_NUMBER}\"\r\n\telse\r\n\techo -e \"Using the latest ${PROJECT} build for version ${MINECRAFT_VERSION}\"\r\n\tBUILD_NUMBER=${LATEST_BUILD}\r\n\tfi\r\n\tJAR_NAME=${PROJECT}-${MINECRAFT_VERSION}-${BUILD_NUMBER}.jar\r\n\techo \"Version being downloaded\"\r\n\techo -e \"MC Version: ${MINECRAFT_VERSION}\"\r\n\techo -e \"Build: ${BUILD_NUMBER}\"\r\n\techo -e \"JAR Name of Build: ${JAR_NAME}\"\r\n\tDOWNLOAD_URL=https:\/\/api.papermc.io\/v2\/projects\/${PROJECT}\/versions\/${MINECRAFT_VERSION}\/builds\/${BUILD_NUMBER}\/downloads\/${JAR_NAME}\r\n\tfi\r\n\tcd \/mnt\/server\r\n\techo -e \"Running curl -o ${SERVER_JARFILE} ${DOWNLOAD_URL}\"\r\n\tif [ -f ${SERVER_JARFILE} ]; then\r\n\tmv ${SERVER_JARFILE} ${SERVER_JARFILE}.old\r\n\tfi\r\n\tcurl -o ${SERVER_JARFILE} ${DOWNLOAD_URL}\r\n\tif [ ! -f server.properties ]; then\r\n\techo -e \"Downloading MC server.properties\"\r\n\tcurl -o server.properties https:\/\/raw.githubusercontent.com\/parkervcp\/eggs\/master\/minecraft\/java\/server.properties\r\n\tfi\r\n\tmkdir plugins\r\n\techo -e \"Downloading Geyser\"\r\n\tGEYSER_HASH=`curl -L https:\/\/download.geysermc.org\/v2\/projects\/geyser\/versions\/latest\/builds\/latest | jq -r .downloads.spigot.sha256`\r\n\tcurl -o plugins\/geyser-spigot.jar -L https:\/\/download.geysermc.org\/v2\/projects\/geyser\/versions\/latest\/builds\/latest\/downloads\/spigot\r\n\techo \"${GEYSER_HASH} plugins\/geyser-spigot.jar\" | sha256sum -c\r\n\tRESULT=$?\r\n\tif [[ $RESULT -eq 0 ]]; then\r\n\techo \"Geyser SHA256 match\"\r\n\telse\r\n\techo \"SHA256 does not match! Aborting...\"\r\n\trm plugins\/geyser-spigot.jar\r\n\texit 1\r\n\tfi\r\n\techo -e \"Downloading Floodgate\"\r\n\tFLOODGATE_HASH=`curl -L https:\/\/download.geysermc.org\/v2\/projects\/floodgate\/versions\/latest\/builds\/latest | jq -r .downloads.spigot.sha256`\r\n\tcurl -o plugins\/floodgate-spigot.jar -L https:\/\/download.geysermc.org\/v2\/projects\/floodgate\/versions\/latest\/builds\/latest\/downloads\/spigot\r\n\techo \"${FLOODGATE_HASH} plugins\/floodgate-spigot.jar\" | sha256sum -c\r\n\tRESULT=$?\r\n\tif [[ $RESULT -eq 0 ]]; then\r\n\techo \"Floodgate SHA256 match\"\r\n\telse\r\n\techo \"SHA256 does not match! Aborting...\"\r\n\trm plugins\/floodgate-spigot.jar\r\n\texit 1\r\n\tfi\r\n\tmkdir -p plugins\/Geyser-Spigot\/\r\n\tif [[ ! -f \"plugins\/Geyser-Spigot\/config.yml\" ]]; then\r\n\techo -e \"Downloading default Geyser config\"\r\n\tcurl -o plugins\/Geyser-Spigot\/config.yml https:\/\/raw.githubusercontent.com\/GeyserMC\/Geyser\/master\/core\/src\/main\/resources\/config.yml\r\n\tsed -i 's\/: online\/: floodgate\/g' plugins\/Geyser-Spigot\/config.yml\r\n\tfi\r\n        \r\n        # Set up Paper-Geyser-Floodgate startup command with unix_args.txt check\r\n        echo 'java -Xms128M -XX:MaxRAMPercentage=95.0 -Dterminal.jline=false -Dterminal.ansi=true -DgeyserUdpPort={{GEYSER_PORT}} -jar server.jar' > startup.sh\r\n        ;;\r\nesac\r\n\r\n# Final setup and permissions\r\nchmod +x startup.sh\r\necho \"Setup complete. You may click on the start button.\"",
            "container": "ghcr.io\/pterodactyl\/installers:alpine",
            "entrypoint": "ash"
        }
    },
    "variables": [
        {
            "name": "Minecraft Version",
            "description": "Installs the latest version of Minecraft for your selected server software",
            "env_variable": "MINECRAFT_VERSION",
            "default_value": "Latest",
            "user_viewable": true,
            "user_editable": false,
            "rules": "nullable|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Server Software",
            "description": "Write the server software to install: Paper or Purpur (Geyser-Floodgate)",
            "env_variable": "SERVER_SOFTWARE",
            "default_value": "Paper",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Download Path",
            "description": "A URL to use to download a server.jar rather than the ones in the install script. This is not user viewable.",
            "env_variable": "DL_PATH",
            "default_value": "",
            "user_viewable": false,
            "user_editable": false,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Build Number",
            "description": "The build number for the paper release.\r\n\r\nLeave at latest to always get the latest version. Invalid versions will default to latest.",
            "env_variable": "BUILD_NUMBER",
            "default_value": "latest",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Geyser Port",
            "description": "The UDP port that Geyser will listen on:\r\n\"-1\" will forcibly stop Geyser\r\n\"server\" will have Geyser listen on the same port as the TCP server",
            "env_variable": "GEYSER_PORT",
            "default_value": "19132",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:6",
            "field_type": "text"
        },
        {
            "name": "Server Jar File",
            "description": "Server Jarfile, by default this is set to 'server.jar'.\r\nSet it to otherwise if you wish to have a different jarfile name.",
            "env_variable": "SERVER_JARFILE",
            "default_value": "server.jar",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|regex:\/^([\\w\\d._-]+)(\\.jar)$\/",
            "field_type": "text"
        }
    ]
}